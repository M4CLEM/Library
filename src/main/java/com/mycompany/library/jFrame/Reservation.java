/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.library.jFrame;
import com.mycompany.library.User;
import com.mysql.cj.protocol.a.SqlDateValueEncoder;
import com.mysql.cj.xdevapi.Result;

import java.awt.Color;
import java.awt.Font;
import java.sql.*;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.event.KeyEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;

/**
 *
 * @author Clemence
 */
public class Reservation extends javax.swing.JFrame {
    private String url = "jdbc:mysql://localhost:3306/library";
    private String user = "root";
    private String password = "ILovePlmun";

    /**
     * Creates new form Reservation
     */
    public Reservation() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTable = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtMiddleName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtBookID = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtBookTitle = new javax.swing.JTextField();
        btnBookReserve = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(27, 53, 86));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        jPanel1.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Clemence\\Desktop\\LMSImages\\Icons\\logo.jpg")); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(5, 5, 0, 0, new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 438, 120);

        tblTable.setBackground(new java.awt.Color(11, 50, 69));
        tblTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tblTable.setForeground(new java.awt.Color(255, 255, 255));
        tblTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Book ID", "Title", "Author", "Publisher", "Publish Date", "Subject Heading", "Availability"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblTable.setGridColor(new java.awt.Color(255, 255, 255));
        tblTable.setShowGrid(true);
        jScrollPane1.setViewportView(tblTable);
        tblTable.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt)
            {
                int r = tblTable.rowAtPoint(evt.getPoint());
                if(tblTable.getValueAt(r, 0) == null || tblTable.getValueAt(r, 1) == null) {
                    txtBookID.setText("[EMPTY CELL]");
                    txtBookTitle.setText("[EMPTY CELL]");
                    txtBookID.setForeground(Color.gray);
                    txtBookTitle.setForeground(Color.gray);
                } else {
                    int stock = Integer.parseInt((String)tblTable.getValueAt(r, 6));
                    if(stock < 1) {
                        txtBookID.setText("[NOT AVAILABLE]");
                        txtBookTitle.setText("[NOT AVAILABLE]");
                        txtBookID.setForeground(Color.red);
                        txtBookTitle.setForeground(Color.red);
                    } else {
                        txtBookID.setText(tblTable.getValueAt(r, 0).toString());
                        txtBookTitle.setText(tblTable.getValueAt(r, 1).toString());
                        txtBookID.setForeground(Color.white);
                        txtBookTitle.setForeground(Color.white);
                    }
                }
            }
        });

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 150, 880, 430);

        txtSearch.setBackground(new java.awt.Color(11, 50, 69));
        txtSearch.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtSearch.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.add(txtSearch);
        txtSearch.setBounds(670, 80, 240, 30);
        txtSearch.addActionListener(new ComponentAction());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Search");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(550, 70, 110, 48);

        jButton1.setBackground(new java.awt.Color(11, 50, 69));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Back");
        jPanel1.add(jButton1);
        jButton1.setBounds(30, 600, 80, 39);

        jPanel2.setBackground(new java.awt.Color(27, 53, 86));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("First Name:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Middle Name:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Last Name:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Email:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Book ID:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Book Title:");

        txtFirstName.setBackground(new java.awt.Color(11, 50, 69));
        txtFirstName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtFirstName.setForeground(new java.awt.Color(255, 255, 255));

        txtMiddleName.setBackground(new java.awt.Color(11, 50, 69));
        txtMiddleName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMiddleName.setForeground(new java.awt.Color(255, 255, 255));

        txtLastName.setBackground(new java.awt.Color(11, 50, 69));
        txtLastName.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtLastName.setForeground(new java.awt.Color(255, 255, 255));

        txtBookID.setBackground(new java.awt.Color(11, 50, 69));
        txtBookID.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtBookID.setForeground(Color.gray);
        txtBookID.setText("Select a book");
        txtBookID.setEditable(false);

        txtEmail.setBackground(new java.awt.Color(11, 50, 69));
        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(255, 255, 255));

        txtBookTitle.setBackground(new java.awt.Color(11, 50, 69));
        txtBookTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtBookTitle.setForeground(Color.gray);
        txtBookTitle.setText("Select a book");
        txtBookID.setEditable(false);

        btnBookReserve.setBackground(new java.awt.Color(11, 50, 69));
        btnBookReserve.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnBookReserve.setForeground(new java.awt.Color(255, 255, 255));
        btnBookReserve.setText("Reserve");
        btnBookReserve.addActionListener(new ComponentAction());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBookReserve)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtBookTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                        .addComponent(txtBookID)
                        .addComponent(txtEmail)
                        .addComponent(txtLastName)
                        .addComponent(txtMiddleName)
                        .addComponent(txtFirstName)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtMiddleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(btnBookReserve)
                .addContainerGap(195, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 928, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }// </editor-fold>//GEN-END:initComponents


    private class ComponentAction implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e)
        {
            if(e.getSource() == txtSearch) {
                setTableValuesFromSearch();
            } else if(e.getSource() == btnBookReserve) {
                reserveUser();
            }
        }
    }

    private void reserveUser()
    {
        if(txtFirstName.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "No First Name Provided", "Reservation Failed", JOptionPane.ERROR_MESSAGE);
        } else if(txtLastName.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "No Last Name Provided", "Reservation Failed", JOptionPane.ERROR_MESSAGE);
        } else if(txtEmail.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "No Email Provided", "Reservation Failed", JOptionPane.ERROR_MESSAGE);
        } else if(!isValidBookId(txtBookID.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid Book ID", "Reservation Failed", JOptionPane.ERROR_MESSAGE);
        } else if(!isValidBookTitle(txtBookTitle.getText())) {
            JOptionPane.showMessageDialog(null, "Invalid Book Title", "Reservation Failed", JOptionPane.ERROR_MESSAGE);
        } else {
            System.out.println("Reserved");
            // try {
            //     Connection con = DriverManager.getConnection(url, user, password);
            //     PreparedStatement stat = con.prepareStatement();
            // } catch(SQLException e) {
            //     e.printStackTrace();
            // }
        }
    }

    private void setTableValuesFromSearch()
    {
        if(txtSearch.getText().isBlank()) {
            return;
        }
        clearTable();
        String search = "%" + txtSearch.getText() + "%";
        try {
            Connection connection = DriverManager.getConnection(url, user, password);
            PreparedStatement statement = connection.prepareStatement("SELECT * FROM books WHERE LOWER(title) LIKE ?");
            statement.setString(1, search);
            ResultSet result = statement.executeQuery();
            ResultSetMetaData rs = result.getMetaData();
            int column = 0;
            int row = 0;
            int n = rs.getColumnCount();
            while(result.next()) {
                row = result.getRow()-1;
                for(column = 1; column <= n; column++) {
                    tblTable.setValueAt(result.getString(column), row, column-1);
                }
            }
            result.close();
            statement.close();
            connection.close();
        } catch(SQLException exc) {
            exc.printStackTrace();
        }
    }

    private void clearTable()
    {
        for(int i = 0; i < tblTable.getRowCount(); i++) {
            for(int j = 0; j < tblTable.getColumnCount(); j++) {
                tblTable.setValueAt(null, i, j);
            }
        }
    }

    private int getUserId(String first_name, String middle_name, String last_name, String email)
    {
        try {
            Connection con = DriverManager.getConnection(url, user, password);
            PreparedStatement stat = con.prepareStatement("SELECT user_id FROM users WHERE first_name = ? AND middle_name = ? AND last_name = ? AND email = ?");
            stat.setString(1, first_name);
            stat.setString(2, middle_name);
            stat.setString(3, last_name);
            stat.setString(4, email);
            ResultSet result = stat.executeQuery();
            if(result.next()) {
                return result.getInt(1);
            }
            result.close();
            stat.close();
            con.close();
        } catch(SQLException e) {
            e.printStackTrace();
        }
        return 0;
    }

    private boolean isValidBookId(final String id)
    {
        if(id.length() != 13 || txtBookID.getForeground() == Color.gray || txtBookID.getForeground() == Color.red) {
            return false;
        }
        for(int i = 0; i < id.length(); i++) {
            if(!Character.isDigit(id.charAt(i))) {
                return false;
            }
        }
        return true;
    }

    private boolean isValidBookTitle(final String title)
    {
        if(txtBookTitle.getForeground() == Color.gray || txtBookID.getForeground() == Color.red) {
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookReserve;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTable;
    private javax.swing.JTextField txtBookID;
    private javax.swing.JTextField txtBookTitle;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMiddleName;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
